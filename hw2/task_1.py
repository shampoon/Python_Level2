def calc():
    operation = input('Введите операцию (+, -, *, / или 0 для выхода): ')
    if operation == '0':
        return
    numb_1 = input('Введите первое число: ')
    numb_2 = input('Введите второе число: ')
    close_calc = 0
    if not (numb_1.isdigit() and numb_2.isdigit()):
        print('Один из аргументов не является числом. Будьте внимательны!')
    else:
        a = int(numb_1)
        b = int(numb_2)
        if operation == '+':
            print(f'Ваш результат: {a + b}')
        elif operation == '-':
            print(f'Ваш результат: {a - b}')
        elif operation == '*':
            print(f'Ваш результат: {a * b}')
        elif operation == '/':
            if b != 0:
                print(f'Ваш результат: {a / b}')
            else:
                print('Деление на ноль!')
        else:
            print('Вы ввели не корректную операцию!')
    calc()

calc()

"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""
